// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id String @id @default(uuid())
  fullname String 
  email String @unique
  email_verified_at DateTime? 
  password String
  refreshToken String? @db.LongText
  challenge Challenge[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime? 
}


model User {
  id String @id @default(uuid())
  fullname String 
  email String @unique
  email_verified_at DateTime? 
  password String
  profile_image String?
  refreshToken String? @db.LongText
  attempt TaskAttempts[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime? 
}

model Challenge{
  id String @id @default(uuid())
  admin Admin @relation(fields: [admin_id], references: [id])
  admin_id String
  title String
  description String? @db.LongText
  challenge String @db.LongText
  challenge_answer String @db.LongText
  languages Language
  attempt TaskAttempts[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime? 
}

model TaskAttempts{
  id String @id @default(uuid())
  status Status
  user User @relation(fields: [user_id], references: [id])
  user_id String
  challenge Challenge @relation(fields: [challenge_id], references: [id])
  challenge_id String
  user_answer String @db.LongText
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime? 

}

enum Status{
  Sucess
  Unsuccessful
}

enum Language{
  javascript
  Java
}